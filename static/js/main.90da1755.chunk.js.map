{"version":3,"sources":["components/currencySelector/CurrencySelector.js","components/currencyInfo/CurrencyInfo.js","App.js","reportWebVitals.js","index.js"],"names":["CurrencySelector","onChange","currencies","selected","className","value","disabled","Object","keys","map","key","CurrencyInfo","selectedCurrencyCode","selectedCurrencyRate","base","toFixed","src","toLocaleLowerCase","width","height","alt","baseUrl","App","useState","setSelected","setBase","rates","setRates","error","setError","setCurrencies","isLoading","setIsLoading","setSelectedCurrencyRate","setSelectedCurrencyCode","urlRates","process","urlCurrencies","useEffect","a","ratesPromise","fetch","currenciesPromise","Promise","all","ratesResponse","currenciesResponse","json","ratesJson","currenciesJson","symbols","fetchData","target","filteredCurrencyCode","currencyCodes","filter","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90da1755.chunk.js","sourcesContent":["import './style.css';\n\nconst CurrencySelector = ({ onChange, currencies, selected }) => {\n  return (\n    <select className='selector' value={selected} onChange={onChange}>\n      <option value='' disabled>\n        Select your currency\n      </option>\n      {Object.keys(currencies).map((key) => (\n        <option key={key} value={key}>\n          {currencies[key]}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nexport default CurrencySelector;\n","import './style.css';\n\nconst CurrencyInfo = ({\n  selectedCurrencyCode,\n  selectedCurrencyRate,\n  selected,\n  base,\n}) => {\n  return (\n    <div className='info-wrapper'>\n      {selectedCurrencyRate && (\n        <>\n          <div className='info-wrapper__title'>Exchange rate:</div>\n          <div className='info-wrapper__data'>\n            {selectedCurrencyRate.toFixed(2)} {selected} for 1 {base}\n          </div>\n        </>\n      )}\n      {selectedCurrencyCode && (\n        <img\n          className='flag'\n          src={`https://flagcdn.com/96x72/${selectedCurrencyCode.toLocaleLowerCase()}.png`}\n          width='96'\n          height='72'\n          alt='flag'\n        />\n      )}\n    </div>\n  );\n};\n\nexport default CurrencyInfo;\n","import './App.css';\nimport { useEffect, useState } from 'react';\nimport currencyCodes from './currency.json';\nimport CurrencySelector from './components/currencySelector/CurrencySelector';\nimport CurrencyInfo from './components/currencyInfo/CurrencyInfo';\n\nexport const baseUrl = 'http://data.fixer.io/api';\n\nfunction App() {\n  const [selected, setSelected] = useState('');\n  const [base, setBase] = useState(null);\n  const [rates, setRates] = useState(null);\n  const [error, setError] = useState(false);\n  const [currencies, setCurrencies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedCurrencyRate, setSelectedCurrencyRate] = useState(null);\n  const [selectedCurrencyCode, setSelectedCurrencyCode] = useState(null);\n  const urlRates = `${baseUrl}/latest?access_key=${process.env.REACT_APP_FIXER_API_KEY}`;\n  const urlCurrencies = `${baseUrl}/symbols?access_key=${process.env.REACT_APP_FIXER_API_KEY}`;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const ratesPromise = fetch(urlRates);\n        const currenciesPromise = fetch(urlCurrencies);\n        const [ratesResponse, currenciesResponse] = await Promise.all([\n          ratesPromise,\n          currenciesPromise,\n        ]);\n        const ratesJson = await ratesResponse.json();\n        const currenciesJson = await currenciesResponse.json();\n\n        setRates(ratesJson.rates);\n        setBase(ratesJson.base);\n        setCurrencies(currenciesJson.symbols);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [urlRates, urlCurrencies]);\n\n  const handleChange = ({ target }) => {\n    const { value } = target;\n    setSelected(value);\n    setSelectedCurrencyRate(rates[value]);\n\n    const filteredCurrencyCode = Object.keys(currencyCodes).filter(\n      (key) => currencyCodes[key] === value\n    );\n\n    if (filteredCurrencyCode.length > 0) {\n      setSelectedCurrencyCode(filteredCurrencyCode[0]);\n    }\n  };\n\n  return (\n    <div className='wrapper'>\n      {error && <div>Something went wrong</div>}\n      {isLoading && <div>Loading...</div>}\n      {!error && !isLoading && currencies && (\n        <CurrencySelector\n          currencies={currencies}\n          selected={selected}\n          onChange={handleChange}\n        />\n      )}\n      {selectedCurrencyCode && (\n        <CurrencyInfo\n          selectedCurrencyCode={selectedCurrencyCode}\n          selectedCurrencyRate={selectedCurrencyRate}\n          selected={selected}\n          base={base}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}